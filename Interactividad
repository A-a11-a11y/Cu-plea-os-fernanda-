<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Feliz Cumpleaños Fernanda</title>
  <style>
    body {
      margin: 0;
      padding: 0;
      overflow: hidden;
      font-family: 'Arial', sans-serif;
      background: linear-gradient(to bottom, #ffe6f0, #fff);
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      height: 100vh;
      text-align: center;
    }
    h1 {
      font-size: 3em;
      color: #ff4081;
      margin: 0;
      text-shadow: 2px 2px #fff;
      z-index: 10;
      position: relative;
    }
    p {
      font-size: 1.5em;
      color: #333;
      margin-top: 20px;
      z-index: 10;
      position: relative;
    }
    canvas {
      position: absolute;
      top: 0;
      left: 0;
      pointer-events: none;
      z-index: 1;
    }
  </style>
</head>
<body>
  <h1>Feliz cumpleaños Fernanda</h1>
  <p>El lunes vamos por unas granizadas, te quiero mucho</p>

  <audio autoplay loop>
    <source src="https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3" type="audio/mpeg">
  </audio>

  <canvas id="confetti"></canvas>

  <script>
    const canvas = document.getElementById('confetti');
    const ctx = canvas.getContext('2d');
    let W = window.innerWidth;
    let H = window.innerHeight;
    canvas.width = W;
    canvas.height = H;

    const confetti = [];
    const balloons = [];
    const confettiColors = ['#ff0a54','#ff477e','#ff85a1','#fbb1b1','#f9bec7','#f6e7d7'];
    const balloonColors = ['#ff4081','#ff85a1','#ffbf00','#ff6f61','#7ed321','#50e3c2'];

    function random(min, max) {
      return Math.random() * (max - min) + min;
    }

    // Confeti
    class Particle {
      constructor() {
        this.x = random(0, W);
        this.y = random(-H, 0);
        this.r = random(5, 12);
        this.d = random(1, 3);
        this.color = confettiColors[Math.floor(random(0, confettiColors.length))];
        this.tilt = random(-10, 10);
        this.tiltAngleIncremental = random(0.05, 0.12);
        this.tiltAngle = 0;
      }
      draw() {
        ctx.beginPath();
        ctx.lineWidth = this.r / 2;
        ctx.strokeStyle = this.color;
        ctx.moveTo(this.x + this.tilt + this.r / 4, this.y);
        ctx.lineTo(this.x + this.tilt, this.y + this.tilt + this.r / 4);
        ctx.stroke();
      }
    }

    // Globos
    class Balloon {
      constructor() {
        this.x = random(50, W - 50);
        this.y = H + random(50, 300);
        this.radius = random(20, 40);
        this.color = balloonColors[Math.floor(random(0, balloonColors.length))];
        this.speed = random(1, 3);
        this.swing = random(-0.5, 0.5);
        this.angle = 0;
      }
      draw() {
        // Globo
        ctx.beginPath();
        ctx.fillStyle = this.color;
        ctx.ellipse(this.x + Math.sin(this.angle) * 10, this.y, this.radius*0.7, this.radius, 0, 0, Math.PI*2);
        ctx.fill();
        // Hilo
        ctx.beginPath();
        ctx.strokeStyle = "#555";
        ctx.moveTo(this.x + Math.sin(this.angle) * 10, this.y + this.radius);
        ctx.lineTo(this.x + Math.sin(this.angle) * 10, this.y + this.radius + 20);
        ctx.stroke();
      }
      update() {
        this.y -= this.speed;
        this.angle += this.swing;
        if(this.y < -50) {
          this.y = H + random(50, 300);
          this.x = random(50, W - 50);
        }
      }
    }

    function initParticles() {
      for (let i = 0; i < 150; i++) {
        confetti.push(new Particle());
      }
      for (let i = 0; i < 20; i++) {
        balloons.push(new Balloon());
      }
    }

    function draw() {
      ctx.clearRect(0, 0, W, H);
      confetti.forEach(p => p.draw());
      balloons.forEach(b => { b.draw(); b.update(); });
      updateConfetti();
      requestAnimationFrame(draw);
    }

    function updateConfetti() {
      confetti.forEach((p, i) => {
        p.tiltAngle += p.tiltAngleIncremental;
        p.y += (Math.cos(p.d) + 3 + p.r / 2) / 2;
        p.x += Math.sin(p.d);
        p.tilt = Math.sin(p.tiltAngle) * 15;
        if (p.y > H) {
          confetti[i] = new Particle();
          confetti[i].x = random(0, W);
          confetti[i].y = -10;
        }
      });
    }

    window.addEventListener('resize', () => {
      W = window.innerWidth;
      H = window.innerHeight;
      canvas.width = W;
      canvas.height = H;
    });

    initParticles();
    draw();
  </script>
</body>
</html>
